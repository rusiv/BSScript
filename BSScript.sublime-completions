{
	"scope": "source.BSScript",

	"completions":
	[
		"if",
		"then",
		"else",
		"switch",
		"case",
		"default",
		"for",
		"to",
		"downto",
		"while",
		"do",
		"initialization",
		"finalization",
		"exception",
		"not",
		"record",
		"repeat",
		"until",
		"type",
		{ "trigger": "Abs\textended\tllMath", "contents": "Abs(${1:eValue})" },
		//{ "trigger": "addClient", "contents": "addClient(${1:iClientID})" },
		//addLog
		//addNotifyEvent
		//addNotifyXMLMessage
		{ "trigger": "AddStringToFile\tboolean\tllAbs", "contents": "AddStringToFile(${1:sFileName}, ${2:sStr})" },
		{ "trigger": "AddToHistory\tvoid\tllTable", "contents": "AddToHistory(${1:oRecord}, ${2:sInfoString}, ${3:iTransactionType}, ${4:iSourceStatus}, ${5:iTargetStatus}, ${6:iInfo1}, ${7:iInfo2}, ${8:iInfo3}, ${9:dtRemoteStatusChangeTime})" },
		//apiDone
		//apiIint
		{ "trigger": "ArcCos\textended\tllMath", "contents": "ArcCos(${1:eValue})" },
		{ "trigger": "ArcSin\textended\tllMath", "contents": "ArcSin(${1:eValue})" },
		{ "trigger": "ArcTan\textended\tllMath", "contents": "ArcTan(${1:eValue})" },
		//ASCII
		//BaseMngModuleID
		//BlockDocument
		{ "trigger": "BlockRead\tinteger\tllFile", "contents": "BlockRead(${1:oFile}, var ${2:sBuffer}, ${3:iCount})" },
		{ "trigger": "BlockWrite\tinteger\tllFile", "contents": "BlockWrite(${1:oFile}, var ${3:sBuffer}, ${3:iCount})" },
		//CanUseTimeZoneForTable
		{ "trigger": "Ceil\tinteger\tllMath", "contents": "Ceil(${1:eValue)}" },
		//ChangeClientCompatibility
		{ "trigger": "ChangePassword\tvoid\tllRights", "contents": "ChangePassword" },
		{ "trigger": "ChannelReset\tinteger\tllPhone", "contents": "ChannelReset" },
		{ "trigger": "CharCode\tbyte\tllSupprt", "contents": "CharCode(${1:cChar})" },
		{ "trigger": "CheckDataBaseAccess\tboolean\tllSupprt", "contents": "CheckDataBaseAccess(${1:sDataBaseName})" },
		//checkEngineCompatibles
		{ "trigger": "CheckHook\tboolean\tllPhone", "contents": "CheckHook" },
		//CheckNotSignedFields
		//CheckParamValue
		{ "trigger": "CheckSeanSend\tboolean\tllPhone", "contents": "CheckSeanSend" },
		//CheckUserMembershipsForGroup
		{ "trigger": "CheckUserPassword\tinteger\tllRights", "contents": "CheckUserPassword(${1:sUserName})" },
		{ "trigger": "Chr\tchar\tllSupprt", "contents": "Chr(${1:iASCIICode})" },
		//ClearControlCache
		{ "trigger": "ClearDirectory\tboolean\tllFile", "contents": "ClearDirectory(${1:sPath})" },
		//ClearUserDialogSettings
		{ "trigger": "CloseFile\tboolean\tllFile", "contents": "CloseFile(${1:oFile})" },
		{ "trigger": "CloseGate\tvoid\tllCGate", "contents": "CloseGate(${1:iGatePointer})" },
		{ "trigger": "CommitTransaction\tvoid\tllTable", "contents": "CommitTransaction(${1:sDatabaseName})" },
		{ "trigger": "CompressBuffer\tstring\tllCrypto", "contents": "CompressBuffer(${1:pBuffer}, ${2:iSize}, ${3:pNewBuffer}, ${4:iNewSize}, ${5:iCompressLevel})" },
		//ConvertBranchTime1ToBranchTime2
		//ConvertCodePageToWin
		//ConvertConfigTransParams
		//ConvertToNativeSQLForAliasType
		//ConvertToNativeSQLForDatabase
		//ConvertTransAddressRec
		//ConvertTransIdentRec
		{ "trigger": "copyDirectory\tboolean\tllFile", "contents": "CopyDirectory(${1:sSrcPath}, ${2:sDestPath})" },
		{ "trigger": "copyFile\tinteger\tllFile", "contents": "copyFile(${1:sSrcName}, ${2:sDestName}, ${3:bOverwrite})" },
		{ "trigger": "cos\textended\tllMath", "contents": "cos(${1:eValue})" },
		{ "trigger": "createAction\tTAction\tllEngine", "contents": "createAction(${1:iActionType}, ${2:oSender})" },
		//CreateAndLoadMemoryFormManager
		{ "trigger": "CreateAndOpenFile\tTIFile\tllFile", "contents": "CreateAndOpenFile(${1:sFileName}, ${2:wMode})" },
		{ "trigger": "CreateBlobTable\tTBlobTable\tllTable", "contents": "CreateBlobTable(${1:oTable}, ${2:sFieldName})" },
		{ "trigger": "CreateBlobTableFromRecord\tTBlobTable\tllTable", "contents": "CreateBlobTableFromRecord(${1:oRecord}, ${2:sFieldName})" },
		{ "trigger": "CreateBlobTableFromRecordEx\tTBlobTable\tllTable", "contents": "CreateBlobTableFromRecordEx(${1:oRecord}, ${2:sFieldName}, ${3:sStructureName})" },
		//CreateBlobTableFromRecordWithVersion
		{ "trigger": "CreateBtrTable\tTLBtrTable\tllBtrt", "contents": "CreateBtrTable" },
		{ "trigger": "CreateBufferedString\tTRBBufferedString\tllEngine", "contents": "CreateBufferedString" },
		{ "trigger": "CreateClassID\tstring\tllComOle", "contents": "CreateClassID" },
		{ "trigger": "CreateCOMBufferizator\tTCOMBufferizator\tllComOle", "contents": "CreateCOMBufferizator(${1:sMachineName}, ${2:sProgID})" },
		{ "trigger": "CreateCOMObject\tTRBComObject\tllComOle", "contents": "CreateCOMObject" },
		{ "trigger": "CreateCryptoEngine\tTICryptoEngine\tllCrypto", "contents": "CreateCryptoEngine(${1:sType})" },
		//CreateCustomProgressor
		//CreateDatabaseCache
		//CreateDefaultDatabaseAccess
		//CreateDiasoftManager
		//CreateDiasoftRetailManager
		//CreateDicExecStoredProc
		//CreateDicFieldDescription
		//CreateDicIndexList
		//CreateDicRecordDescription
		//CreateDicSelectStoredProc
		{ "trigger": "CreateDicTableDescription\tTDicTableDescriptionInterface\tllTable", "contents": "CreateDicTableDescription" },
		//CreateDictionary
		{ "trigger": "CreateDLCaller\tTDLCaller\tllDlCall", "contents": "CreateDLCaller" },
		{ "trigger": "CreateDllCalls\tTIDllCalls\tllExeDll", "contents": "CreateDllCalls" },
		//CreateDocStatusList
		{ "trigger": "CreateDocumentsInterface\tTDocument\tllEdInt", "contents": "CreateDocumentsInterface" },
		{ "trigger": "CreateDSPList\tTDSPList\tllTable", "contents": "CreateDSPList" },
		{ "trigger": "CreateDSPNode\tTDSPNode\tllTable", "contents": "CreateDSPNode" },
		//CreateEIBlobField
		//CreateEICryptedFile
		{ "trigger": "CreateEIFile\tTEIFile\tllRBase", "contents": "CreateEIFile" },
		{ "trigger": "CreateExecQuery\tTExecQuery\tllTable", "contents": "CreateExecQuery('')" },
		{ "trigger": "CreateSelectQuery\tTSelectQuery\tllTable", "contents": "CreateSelectQuery('')" },
		{ "trigger": "CreateList\tTLangList\tllLists", "contents": "CreateList(${1:iElementType})" },		

		//вне алфавита
		{ "trigger": "FieldByName\tTField", "contents": "FieldByName(${1:sFieldName})" },		
		{ "trigger": "FindField\tTField", "contents": "FindField(${1:sFieldName})" },		
		{ "trigger": "FindComponent\tTComponent", "contents": "FindComponent(${1:sComponentName})" },				
		{ "trigger": "ShowMessage\tvoid llWinApi", "contents": "ShowMessage('${1:sMessage}')" },
		{ "trigger": "LastErrorMessage\tstring", "contents": "LastErrorMessage" },
		//tllSystem
		{ "trigger": "CreateIntegerSet\tTIntegerSetInterface llSystem", "contents": "CreateIntegerSet" },
		{ "trigger": "CurrentDate\tdate llSystem", "contents": "CurrentDate" },
		{ "trigger": "CurrentTime\ttime llSystem", "contents": "CurrentTime" },
		{ "trigger": "DecDate\tdate llSystem", "contents": "DecDate(${1:dDate}, ${2:iYears}, ${3:iMonth}, ${4:iDays})" },
		{ "trigger": "DecDateTime\tdateTime llSystem", "contents": "DecDateTime(${1:dtDateTime}, ${2:iYears}, ${3:iMonth}, ${4:iDays}, ${5:iHours}, ${6:iMinutes}, ${7:iSeconds}, ${8:iMSeconds})" },
		{ "trigger": "DecTime\ttime llSystem", "contents": "DecTime(${1:tTime}, ${2:iHours}, ${3:iMinutes}, ${4:iSeconds}, ${5:iMSecs})" },
		{ "trigger": "FillChar\tvoid llSystem", "contents": "FillChar(${1:sStr}, ${2:iCount}, ${3:cChar})" },
		{ "trigger": "FillString\tstring llSystem", "contents": "FillString(${1:sSource}, ${2:iLength}, ${3:cFillChar}, ${4:iOrient})" },
		{ "trigger": "FreeMem\tvoid llSystem", "contents": "FreeMem(${1:pPointer}, ${2:iSize})" },
		{ "trigger": "FreeObject\tvoid llSystem", "contents": "FreeObject(${1:aObject})" },
		{ "trigger": "GetAndFillMem\tvoid llSystem", "contents": "GetAndFillMem(${1:pPointer}, ${2:iSize}, ${3:pSource})" },
		{ "trigger": "GetMem\tvoid llSystem", "contents": "GetMem(${1:pPointer}, ${2:iSize})" },
		{ "trigger": "IncDate\tdate llSystem", "contents": "IncDate(${1:dDate}, ${2:iYears}, ${3:iMonth}, ${4:iDays})" },
		{ "trigger": "IncDateTime\tdateTime llSystem", "contents": "IncDateTime(${1:dtDateTime}, ${2:iYears}, ${3:iMonth}, ${4:iDays}, ${5:iHours}, ${6:iMinutes}, ${7:iSeconds}, ${8:iMSeconds})" },
		{ "trigger": "IncTime\ttime llSystem", "contents": "IncTime(${1:tTime}, ${2:iHours}, ${3:iMinutes}, ${4:iSeconds}, ${5:iMSecs})" },
		{ "trigger": "Length\tinteger llSystem", "contents": "Length(${1:sSource})" },
		{ "trigger": "LowerCase\tstring llSystem", "contents": "LowerCase(${1:sSource})" },
		{ "trigger": "MemToStr\tstring llSystem", "contents": "MemToStr(${1:pSource}, ${2:iSize})" },
		{ "trigger": "Move\tvoid llSystem", "contents": "Move(${1:iSource}, ${2:iDest}, ${3:iCount})" },
		{ "trigger": "Now\tdateTime llSystem", "contents": "Now" },
		{ "trigger": "Random\tinteger llSystem", "contents": "Random(${1:iRange})" },
		{ "trigger": "SetLength\tvoid llSystem", "contents": "SetLength(${1:sStr}, ${2:iLength})" },
		{ "trigger": "SizeOf\tbyte llSystem", "contents": "SizeOf(${1:vVariable})" },
		{ "trigger": "StrCopy\tstring llSystem", "contents": "StrCopy(${1:sSource}, ${2:iIndex}, ${3:iCount})" },
		{ "trigger": "StrDelete\tvoid llSystem", "contents": "StrDelete(${1:sStr}, ${2:iIndex}, ${3:iCount})" },
		{ "trigger": "StrPos\tinteger llSystem", "contents": "StrPos(${1:sSubStr}, ${2:sSource})" },
		{ "trigger": "StrTrim\tstring llSystem", "contents": "StrTrim(${1:sSource})" },
		{ "trigger": "StrTrimLeft\tstring llSystem", "contents": "StrTrimLeft(${1:sSource})" },
		{ "trigger": "StrTrimRight\tstring llSystem", "contents": "StrTrimRight(${1:sSource})" },
		{ "trigger": "UpperCase\tstring llSystem", "contents": "UpperCase(${1:sSource})" }
		
	]
}
